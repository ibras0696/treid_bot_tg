# –ö–Ω–æ–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
import asyncio

from aiogram.types import (ReplyKeyboardMarkup, KeyboardButton,
                           InlineKeyboardButton, InlineKeyboardMarkup)

from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder

from Keyboards.Keyboards_all import inline_keyboard_buttons, inline_keyboard_button

# –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥
back_user_button = asyncio.run(inline_keyboard_button(
    buttons_dct={'‚ùé –ù–∞–∑–∞–¥ ‚ùé': 'back'},
        starts='',
))

# –°–ª–æ–≤–∞—Ä—å –Ω—É–∂–Ω—ã–π –≤–æ–ª—é—Ç
dct_value_inverting = {
    'üí∏AUD/CADüí∏': '47',
    'üí∏AUD/CHFüí∏': '48',
    'üí∏AUD/GBPüí∏': '1489',
    'üí∏AUD/JPYüí∏': '49',
    'üí∏AUD/USDüí∏': '5',
    'üí∏CAD/CHFüí∏': '14',
    'üí∏CAD/JPYüí∏': '51',
    'üí∏CHF/JPYüí∏': '13',
    'üí∏EUR/AUDüí∏': '15',
    'üí∏EUR/CADüí∏': '16',
    'üí∏EUR/CHFüí∏': '10',
    'üí∏EUR/GBPüí∏': '6',
    'üí∏EUR/JPYüí∏': '9',
    'üí∏EUR/USDüí∏': '1',
    'üí∏GBP/AUDüí∏': '53',
    'üí∏GBP/CADüí∏': '54',
    'üí∏GBP/JPYüí∏': '11',
    'üí∏GBP/USDüí∏': '2',
    'üí∏USD/CADüí∏': '7',
    'üí∏USD/CHFüí∏': '4',
    'üí∏USD/JPYüí∏': '3'}

reverse_dct_value_inverting = {
    '1': 'üí∏EUR/USDüí∏',
    '10': 'üí∏EUR/CHFüí∏',
    '11': 'üí∏GBP/JPYüí∏',
    '13': 'üí∏CHF/JPYüí∏',
    '14': 'üí∏CAD/CHFüí∏',
    '1489': 'üí∏AUD/GBPüí∏',
    '15': 'üí∏EUR/AUDüí∏',
    '16': 'üí∏EUR/CADüí∏',
    '2': 'üí∏GBP/USDüí∏',
    '3': 'üí∏USD/JPYüí∏',
    '4': 'üí∏USD/CHFüí∏',
    '47': 'üí∏AUD/CADüí∏',
    '48': 'üí∏AUD/CHFüí∏',
    '49': 'üí∏AUD/JPYüí∏',
    '5': 'üí∏AUD/USDüí∏',
    '51': 'üí∏CAD/JPYüí∏',
    '53': 'üí∏GBP/AUDüí∏',
    '54': 'üí∏GBP/CADüí∏',
    '6': 'üí∏EUR/GBPüí∏',
    '7': 'üí∏USD/CADüí∏',
    '9': 'üí∏EUR/JPYüí∏'}

# –ö–Ω–æ–ø–∫–∏ –í–∞–ª—é—Ç
values_keyboards = asyncio.run(inline_keyboard_buttons(
    buttons_dct=dct_value_inverting,
    starts='val_',
    adjust=3,

))


# –°–ª–æ–≤–∞—Ä—å –Ω—É–∂–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
dct_time_out = {
    '‚¨õ1 –ú–∏–Ω—É—Ç–∞‚¨õ': '1m',
    '‚¨õ5 –ú–∏–Ω—É—Ç‚¨õ': '5m',
    '‚¨õ15 –ú–∏–Ω—É—Ç‚¨õ': '15m',
    '‚¨õ30 –ú–∏–Ω—É—Ç‚¨õ': '30m',
    '‚¨õ1 –ß–∞—Å‚¨õ': '1h',
    '‚¨õ5 –ß–∞—Å–æ–≤‚¨õ': '5h',
    '‚¨õ1 –î–µ–Ω—å‚¨õ': '1d',
    '‚¨õ1 –ù–µ–¥–µ–ª—è‚¨õ': '1w',
    '‚¨õ1 –ú–µ—Å—è—Ü‚¨õ': '1mo',
    }

# –ö–Ω–æ–ø–∫–∏ –¥–ª –≤—Ä–µ–º–µ–Ω–∏
time_out_keyboards = asyncio.run(inline_keyboard_buttons(
    buttons_dct=dct_time_out,
    starts='time_',
    adjust=3,
))

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def correct_status(tg_id: int) -> InlineKeyboardMarkup:
    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    correct = await inline_keyboard_buttons(
        buttons_dct={'–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å': tg_id},
        starts='cor_',
        adjust=1
    )
    return correct


